<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/start_script.py" timestamp="1498869515906">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/test_binarySearchTree.py" timestamp="1496098705227">
        <mark key="'" line="152" column="37" />
        <mark key="[" line="162" column="0" />
        <mark key="]" line="155" column="43" />
        <mark key="^" line="155" column="41" />
        <mark key="." line="155" column="43" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/max/deploy.yml" timestamp="1485059530226">
        <mark key="[" line="14" column="38" />
        <mark key="]" line="14" column="38" />
        <mark key="^" line="14" column="38" />
        <mark key="." line="14" column="38" />
      </file>
      <file name="/a.dummy" timestamp="1498838901155">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/home/templates/home/event_list_page.html" timestamp="1476635471811">
        <mark key="[" line="4" column="17" />
        <mark key="]" line="4" column="17" />
        <mark key="." line="4" column="17" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/max/test_scenarios.txt" timestamp="1484526218482">
        <mark key="[" line="34" column="0" />
        <mark key="]" line="34" column="0" />
        <mark key="." line="34" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/leetcode/src/main/python/hackerrank/datastucture/tree/BinaryTree.py" timestamp="1495296287158">
        <mark key="[" line="48" column="0" />
        <mark key="]" line="18" column="0" />
        <mark key="." line="18" column="0" />
        <mark key="^" line="18" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/manage.py" timestamp="1482429803606">
        <mark key="[" line="7" column="63" />
        <mark key="]" line="7" column="63" />
        <mark key="." line="7" column="63" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/test.py" timestamp="1495577736634">
        <mark key="[" line="10" column="28" />
        <mark key="]" line="8" column="34" />
        <mark key="^" line="8" column="36" />
        <mark key="." line="8" column="34" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/home/templates/home/event_detail_page.html" timestamp="1477238163146">
        <mark key="[" line="1" column="15" />
        <mark key="]" line="1" column="15" />
        <mark key="." line="1" column="15" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/BinaryTree.py" timestamp="1496105055953">
        <mark key="[" line="142" column="0" />
        <mark key="]" line="142" column="0" />
        <mark key="." line="142" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/common/tasks/main.yml" timestamp="1485041221355">
        <mark key="[" line="3" column="21" />
        <mark key="]" line="0" column="23" />
        <mark key="^" line="0" column="23" />
        <mark key="." line="0" column="23" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloLambda/test.py" timestamp="1485037943100">
        <mark key="[" line="16" column="23" />
        <mark key="]" line="16" column="24" />
        <mark key="^" line="16" column="24" />
        <mark key="." line="16" column="24" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/node.py" timestamp="1495765815871">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="21" />
        <mark key="^" line="0" column="21" />
        <mark key="." line="0" column="21" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/test/136394.1.txt" timestamp="1498850180194">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/max/README.md" timestamp="1485129727364">
        <mark key="[" line="130" column="2" />
        <mark key="]" line="128" column="26" />
        <mark key="." line="128" column="26" />
        <mark key="^" line="128" column="26" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/secret-key.txt" timestamp="1482022034400">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/__init__.py" timestamp="1482515484315">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/home/templates/home/default_page.html" timestamp="1477238156735">
        <mark key="[" line="1" column="15" />
        <mark key="]" line="1" column="15" />
        <mark key="." line="1" column="15" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/home/models/__init__.py" timestamp="1480870878544">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="19" />
        <mark key="." line="1" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" timestamp="1498936310922">
        <mark key="'" line="18" column="25" />
        <mark key="[" line="26" column="55" />
        <mark key="]" line="27" column="66" />
        <mark key="^" line="27" column="66" />
        <mark key="." line="27" column="66" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/todo.md" timestamp="1482517828939">
        <mark key="[" line="12" column="0" />
        <mark key="]" line="12" column="0" />
        <mark key="." line="12" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/foundation/home/templates/home/home_page.html" timestamp="1469230790523">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="0" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/foundation/home/models/blocks.py" timestamp="1469895112267">
        <mark key="[" line="25" column="17" />
        <mark key="]" line="26" column="0" />
        <mark key="." line="26" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/test_directedGraph.py" timestamp="1496720183945">
        <mark key="'" line="136" column="34" />
        <mark key="[" line="190" column="0" />
        <mark key="]" line="190" column="0" />
        <mark key="^" line="189" column="88" />
        <mark key="." line="190" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/graph.py" timestamp="1496975357024">
        <mark key="'" line="215" column="0" />
        <mark key="[" line="250" column="15" />
        <mark key="]" line="215" column="0" />
        <mark key="." line="215" column="0" />
        <mark key="^" line="215" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/WagtailTest/home/models.py" timestamp="1470328777343">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="3" column="43" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/mail-schema.avsc" timestamp="1498935617788">
        <mark key="[" line="33" column="18" />
        <mark key="]" line="33" column="18" />
        <mark key="." line="33" column="18" />
        <mark key="^" line="33" column="22" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/7/174185.txt" timestamp="1498936237688">
        <mark key="'" line="8" column="2" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/test_binaryTree.py" timestamp="1496104172019">
        <mark key="[" line="65" column="68" />
        <mark key="]" line="65" column="68" />
        <mark key="." line="65" column="68" />
        <mark key="^" line="64" column="64" />
      </file>
      <file name="/Python Console" timestamp="1498934881768">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/fragment.py" timestamp="1498849736174">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/cartetian_product.py" timestamp="1495554719358">
        <mark key="[" line="10" column="14" />
        <mark key="]" line="10" column="18" />
        <mark key="." line="10" column="18" />
        <mark key="^" line="10" column="18" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/home/templates/home/home_page.html" timestamp="1477275868057">
        <mark key="[" line="3" column="19" />
        <mark key="]" line="1" column="32" />
        <mark key="." line="3" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/test_graph.py" timestamp="1498096568737">
        <mark key="[" line="22" column="31" />
        <mark key="]" line="23" column="33" />
        <mark key="." line="23" column="33" />
        <mark key="^" line="23" column="33" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/home/models/__init__.py" timestamp="1480870881339">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="20" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/topological_sort.py" timestamp="1496289457011">
        <mark key="[" line="151" column="0" />
        <mark key="]" line="151" column="0" />
        <mark key="." line="151" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/test/175419.1.txt" timestamp="1498850724450">
        <mark key="[" line="2" column="0" />
        <mark key="]" line="1" column="3" />
        <mark key="." line="1" column="3" />
        <mark key="^" line="1" column="3" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/max/max.py" timestamp="1485040276032">
        <mark key="'" line="72" column="82" />
        <mark key="[" line="105" column="47" />
        <mark key="]" line="105" column="45" />
        <mark key="." line="105" column="45" />
        <mark key="^" line="105" column="45" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/max/test.py" timestamp="1485126719728">
        <mark key="[" line="23" column="5" />
        <mark key="]" line="23" column="23" />
        <mark key="." line="23" column="23" />
        <mark key="^" line="23" column="23" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" timestamp="1498861105718">
        <mark key="'" line="24" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" timestamp="1498098793681">
        <mark key="'" line="138" column="24" />
        <mark key="[" line="143" column="0" />
        <mark key="]" line="143" column="0" />
        <mark key="." line="143" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1498929019006">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/web/files/supervisor/logrotate" timestamp="1482426496413">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="0" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/home/templates/home/about_us_page.html" timestamp="1477275132200">
        <mark key="[" line="10" column="14" />
        <mark key="]" line="10" column="0" />
        <mark key="." line="10" column="0" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/answer.txt" timestamp="1498937715542">
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="0" />
        <mark key="." line="23" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/max/misc_notes.txt" timestamp="1485129413198">
        <mark key="[" line="2" column="13" />
        <mark key="]" line="2" column="13" />
        <mark key="^" line="9" column="15" />
        <mark key="." line="2" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/HelloWagtail/home/models/blocks.py" timestamp="1476554618403">
        <mark key="[" line="20" column="0" />
        <mark key="]" line="20" column="0" />
        <mark key="." line="20" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/home/models/pages.py" timestamp="1480871241993">
        <mark key="[" line="12" column="0" />
        <mark key="]" line="12" column="0" />
        <mark key="." line="12" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/examples/object_equality.py" timestamp="1496974619322">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="1" column="2" />
        <mark key="^" line="3" column="0" />
        <mark key="." line="1" column="2" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/settings/dev.py" timestamp="1482011118151">
        <mark key="[" line="15" column="8" />
        <mark key="]" line="9" column="0" />
        <mark key="." line="9" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/max/max_template.py" timestamp="1485126730863">
        <mark key="'" line="140" column="11" />
        <mark key="[" line="145" column="55" />
        <mark key="]" line="146" column="0" />
        <mark key="." line="146" column="0" />
        <mark key="^" line="146" column="22" />
      </file>
      <file name="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" timestamp="1498851528227">
        <mark key="'" line="282" column="0" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/web/templates/supervisor_asiancops.conf" timestamp="1482453924509">
        <mark key="[" line="4" column="12" />
        <mark key="]" line="4" column="12" />
        <mark key="." line="4" column="12" />
      </file>
      <file name="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/BinarySearchTree.py" timestamp="1496371663968">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="342" column="27" />
        <mark key="]" line="342" column="27" />
        <mark key="^" line="329" column="23" />
        <mark key="." line="342" column="27" />
      </file>
    </filemarks>
    <jumps>
      <jump line="31" column="32" filename="$USER_HOME$/PycharmProjects/HelloWagtail/HelloWagtail/templates/base.html" />
      <jump line="14" column="63" filename="$USER_HOME$/PycharmProjects/HelloWagtail/HelloWagtail/templates/base.html" />
      <jump line="94" column="25" filename="$USER_HOME$/PycharmProjects/HelloWagtail/home/models/snippets.py" />
      <jump line="0" column="0" filename="$USER_HOME$/PycharmProjects/HelloWagtail/home/models/pages.py" />
      <jump line="21" column="18" filename="$USER_HOME$/PycharmProjects/HelloWagtail/home/models/blocks.py" />
      <jump line="26" column="0" filename="$USER_HOME$/PycharmProjects/HelloWagtail/HelloWagtail/settings/base.py" />
      <jump line="0" column="0" filename="$USER_HOME$/PycharmProjects/HelloWagtail/home/templates/home/form_page.html" />
      <jump line="22" column="29" filename="$USER_HOME$/PycharmProjects/HelloWagtail/home/templates/home/form_page.html" />
      <jump line="39" column="46" filename="$USER_HOME$/git/django-forms-bootstrap/django_forms_bootstrap/templates/bootstrap/field.html" />
      <jump line="18" column="55" filename="$USER_HOME$/PycharmProjects/HelloWagtail/HelloWagtail/templates/home/carousel.html" />
      <jump line="5" column="0" filename="$USER_HOME$/PycharmProjects/AsianCops/MANIFEST.in" />
      <jump line="38" column="27" filename="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/settings/base.py" />
      <jump line="27" column="4" filename="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/settings/base.py" />
      <jump line="37" column="25" filename="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/settings/base.py" />
      <jump line="26" column="29" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/circle/tasks/main.yml" />
      <jump line="138" column="18" filename="$USER_HOME$/git/ansible/contrib/inventory/ec2.py" />
      <jump line="18" column="25" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/aws/tasks/main.yml" />
      <jump line="43" column="27" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/aws/tasks/main.yml" />
      <jump line="47" column="10" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/aws/tasks/main.yml" />
      <jump line="4" column="16" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/aws/tasks/main.yml" />
      <jump line="24" column="16" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/aws/tasks/main.yml" />
      <jump line="44" column="27" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/aws/tasks/main.yml" />
      <jump line="9" column="54" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/common/defaults/main.yml" />
      <jump line="7" column="1" filename="$USER_HOME$/PycharmProjects/AsianCops/configure/roles/web/templates/config.json" />
      <jump line="39" column="27" filename="$USER_HOME$/PycharmProjects/HelloWagtail/HelloWagtail/settings/base.py" />
      <jump line="87" column="9" filename="$USER_HOME$/PycharmProjects/HelloWagtail/HelloWagtail/settings/base.py" />
      <jump line="143" column="24" filename="$USER_HOME$/PycharmProjects/HelloWagtail/HelloWagtail/settings/base.py" />
      <jump line="20" column="38" filename="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/AsianCops/settings/base.py" />
      <jump line="123" column="24" filename="$USER_HOME$/PycharmProjects/AsianCops/AsianCops/AsianCops/settings/base.py" />
      <jump line="17" column="37" filename="$USER_HOME$/PycharmProjects/max/max.py" />
      <jump line="19" column="43" filename="$USER_HOME$/PycharmProjects/max/max.py" />
      <jump line="68" column="82" filename="$USER_HOME$/PycharmProjects/max/max.py" />
      <jump line="115" column="28" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="162" column="19" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="165" column="41" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="167" column="12" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="112" column="4" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="144" column="12" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="166" column="8" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="138" column="0" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="139" column="12" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="154" column="0" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="176" column="4" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="142" column="19" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="141" column="11" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="140" column="11" filename="$USER_HOME$/PycharmProjects/max/max_template.py" />
      <jump line="30" column="41" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/test_binarySearchTree.py" />
      <jump line="31" column="43" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/test_binarySearchTree.py" />
      <jump line="18" column="19" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="12" column="5" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="16" column="24" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="17" column="20" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="68" column="24" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/test_binarySearchTree.py" />
      <jump line="154" column="37" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/test_binarySearchTree.py" />
      <jump line="283" column="18" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/BinarySearchTree.py" />
      <jump line="0" column="0" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/tree/BinarySearchTree.py" />
      <jump line="99" column="131" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/graph.py" />
      <jump line="211" column="37" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/graph.py" />
      <jump line="166" column="43" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/test_directedGraph.py" />
      <jump line="134" column="34" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/test_directedGraph.py" />
      <jump line="215" column="0" filename="$USER_HOME$/PycharmProjects/leetcode_python/datastructure/graph/graph.py" />
      <jump line="20" column="22" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="68" column="34" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="86" column="29" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="10" column="12" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="78" column="0" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="126" column="0" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="127" column="24" filename="$USER_HOME$/PycharmProjects/leetcode_python/competition/_101hack49_052317/graph.py" />
      <jump line="11" column="59" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="23" column="46" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="32" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="113" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="136" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="212" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="233" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="250" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="282" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/175419.txt" />
      <jump line="18" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" />
      <jump line="2" column="13" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" />
      <jump line="8" column="17" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" />
      <jump line="12" column="34" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" />
      <jump line="13" column="10" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" />
      <jump line="14" column="13" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" />
      <jump line="24" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/1/177802.txt" />
      <jump line="36" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="54" column="25" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="61" column="57" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="64" column="13" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="5" column="28" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="6" column="31" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="13" column="4" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="14" column="19" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="18" column="25" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/mail/parse_header.py" />
      <jump line="1" column="5" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/7/174185.txt" />
      <jump line="8" column="2" filename="$USER_HOME$/IdeaProjects/mail-analytics/parse/enron_with_categories/7/174185.txt" />
      <jump line="5" column="15" filename="$USER_HOME$/IdeaProjects/mail-analytics/answer.txt" />
      <jump line="24" column="0" filename="$USER_HOME$/IdeaProjects/mail-analytics/answer.txt" />
      <jump line="398" column="44" filename="$USER_HOME$/IdeaProjects/mail-analytics/answer.txt" />
      <jump line="1318" column="1" filename="$USER_HOME$/IdeaProjects/mail-analytics/answer.txt" />
      <jump line="1325" column="4" filename="$USER_HOME$/IdeaProjects/mail-analytics/answer.txt" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="-" type="4">
        <text>eger</text>
      </register>
      <register name="/" type="4">
        <text>---</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAibmFtZSI6ICJyZWNpcGllbnQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0K</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">b25seSBzaG93aW5nIHRvcCAzIHJvd3MK</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Ky0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tKwo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">fFNoZWxrLCBKb2huIDwvTz1FLi4ufCAgIDU3fAo=</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">fEthbWluc2tpLCBWaW5jZSBKLi4ufCAgIDkwfAo=</text>
      </register>
      <register name=":" type="4">
        <text>.,$d</text>
      </register>
    </registers>
    <search>
      <last-search>---</last-search>
      <last-offset />
      <last-pattern>---</last-pattern>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>respond</entry>
        <entry>event</entry>
        <entry>id</entry>
        <entry>test_delete</entry>
        <entry>print</entry>
        <entry encoding="base64">XDxlZGdlX2RpcmVjdGlvblw+</entry>
        <entry>2, 5</entry>
        <entry>ko</entry>
        <entry>raju</entry>
        <entry>_id</entry>
        <entry>other_no</entry>
        <entry>num_ed</entry>
        <entry encoding="base64">XDwpXD4=</entry>
        <entry>^To:</entry>
        <entry>kean</entry>
        <entry>parse</entry>
        <entry>To:</entry>
        <entry>^to</entry>
        <entry>to[0</entry>
        <entry>---</entry>
      </history-search>
      <history-cmd>
        <entry>.,$-4d</entry>
        <entry>3,$d</entry>
        <entry>1,$d</entry>
        <entry>w</entry>
        <entry>set ic</entry>
        <entry>q</entry>
        <entry>26,68d</entry>
        <entry>$</entry>
        <entry>34,1278d</entry>
        <entry>0</entry>
        <entry>.,$d</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>